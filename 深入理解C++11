// 深入理解C++11
	98/326
	
	////////////////////////////////////////////////////////////////////
	(ok) 第一章:新标准的诞生
	
	////////////////////////////////////////////////////////////////////
	(ok) 第二章:保证稳定性和兼容性
		override final关键字倒是可以用用，避免一些不必要的错误

	////////////////////////////////////////////////////////////////////
	// 第三章: 通用为本 专用为末
		
		// 3.3 右值引用:移动语义和完美转发
			// 左值(lvalue) 右值(rvalue)
				// 左值
					可以取地址，有名字的
				// 右值
					不可以取地址，没有名字的
				// c++11右值
					// 纯右值 (pure rvalue)
						c++98标准中的右值
						// ex:
							非引用返回的函数返回的临时变量
							运算表达式产生的临时变量值
							不跟对象关联的字面量
					// 将亡值 (expiring value)
						跟c++11新增的跟右值引用相关的表达式，这样表达式通常是将要被移动的对象
						// ex:
							返回右值引用T&&的函数返回值
							std::move的返回值
							转换为T&&的类型转换函数的返回值
			// std::move
				唯一的功能是将一个左值强制转换为右值引用。
				等同于 static_cast<T&&>(lvalue)

	////////////////////////////////////////////////////////////////////
	// 第六章:提高性能及操作硬件的能力
		196
